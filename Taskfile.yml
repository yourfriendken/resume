version: '3'

vars:
  PYTHON: python3.14
  TEMPLATE: '{{.TEMPLATE | default "resume"}}'
  GENERATOR: scripts/generate_resume.py
  OUTPUT_DIR: docs

tasks:
  default:
    desc: Show available tasks
    silent: true
    cmds:
      - echo "Resume Generator Tasks:"
      - echo ""
      - echo "  task install    - Install Python dependencies"
      - echo "  task resume     - Generate all formats"
      - echo "  task markdown   - Generate markdown only"
      - echo "  task html       - Generate HTML only" 
      - echo "  task list       - List available templates"
      - echo "  task clean      - Clean output directory"
      - echo "  task preview    - Start preview server"
      - echo ""
      - echo "Variables:"
      - echo "  TEMPLATE=name   - Specify template"

  setup:
    desc: Install Python dependencies
    cmds:
      # create virtual environment if not exists
      - |
        if [ ! -d "venv" ]; then
          echo "Creating virtual environment..."
          python3.14 -m venv venv
        else
          echo "Virtual environment already exists."
        fi
        . venv/bin/activate && 
        pip install --upgrade pip &&
        pip install -r requirements.txt
      - echo "Dependencies installed!"

  setup-output:
    desc: Ensure output directory exists
    cmds:
      - mkdir -p {{.OUTPUT_DIR}}
    silent: true

  resume:
    desc: Generate all formats
    deps: [setup-output]
    cmds:
      - "python {{.GENERATOR}} --template {{.TEMPLATE}} --format all"

  markdown:
    desc: Generate markdown only
    deps: [setup-output]
    cmds:
      - "{{.PYTHON}} {{.GENERATOR}} --template {{.TEMPLATE}} --format markdown"

  html:
    desc: Generate HTML only
    deps: [setup-output]
    cmds:
      - "{{.PYTHON}} {{.GENERATOR}} --template {{.TEMPLATE}} --format html"

  list:
    desc: List available templates
    cmds:
      - "{{.PYTHON}} {{.GENERATOR}} --list-templates"

  preview:
    desc: Start preview server for HTML files
    cmds:
      - "{{.PYTHON}} scripts/preview_server.py"

  clean:
    desc: Clean output directory
    cmds:
      - rm -rf {{.OUTPUT_DIR}}/*
      - echo "Output directory cleaned!"

  watch:
    desc: Watch for changes and regenerate
    deps: [setup-output]
    sources:
      - "data/*.yml"
      - "templates/**/*.md"
      - "templates/**/*.html"
    generates:
      - "{{.OUTPUT_DIR}}/resume_{{.TEMPLATE}}.*"
    cmds:
      - "{{.PYTHON}} {{.GENERATOR}} --template {{.TEMPLATE}} --format all"
      - echo "Resume regenerated"

  check:
    desc: Check if dependencies are installed
    cmds:
      - "{{.PYTHON}} --version"
      - "{{.PYTHON}} -c 'import yaml, jinja2, markdown; print(\"All dependencies available\")'"
    ignore_error: true

  validate:
    desc: Validate YAML data files
    cmds:
      - for file in data/*.yml; do echo "Validating $file"; {{.PYTHON}} -c "import yaml; yaml.safe_load(open('$file'))"; done
      - echo "All YAML files are valid"

  all:
    desc: Complete workflow
    cmds:
      - task: install
      - task: validate
      - task: resume
      - echo "Resume generation complete!"